include/linux/module.h
include/net/net_namespace.h
include/net/netns/generic.h
include/linux/fs.h
static unsigned int grace_net_id; 
static DEFINE_SPINLOCK(grace_lock); 
void locks_start_grace(struct net *net, struct lock_manager *lm) 
EXPORT_SYMBOL_GPL(locks_start_grace); 
void locks_end_grace(struct lock_manager *lm) 
EXPORT_SYMBOL_GPL(locks_end_grace); 
static bool __state_in_grace(struct net *net, bool open) 
bool locks_in_grace(struct net *net) 
EXPORT_SYMBOL_GPL(locks_in_grace); 
bool opens_in_grace(struct net *net) 
EXPORT_SYMBOL_GPL(opens_in_grace); 
static int __net_init grace_init_net(struct net *net) 
static void __net_exit grace_exit_net(struct net *net) 
static struct pernet_operations grace_net_ops = { 
.init = grace_init_net, .exit = grace_exit_net, .id   = &grace_net_id, .size = sizeof(struct list_head), }; 
static int __init init_grace(void) 
static void __exit exit_grace(void) 
MODULE_AUTHOR("Jeff Layton <jlayton@primarydata.com>"); 
MODULE_LICENSE("GPL"); 
module_init(init_grace) 
module_exit(exit_grace) 
