struct filename * getname_flags(const char __user *filename, int flags, int *empty) 
struct filename * getname(const char __user * filename) 
struct filename * getname_kernel(const char * filename) 
void putname(struct filename *name) 
static int check_acl(struct inode *inode, int mask) 
static int acl_permission_check(struct inode *inode, int mask) 
int generic_permission(struct inode *inode, int mask) 
static inline int do_inode_permission(struct inode *inode, int mask) 
static int sb_permission(struct super_block *sb, struct inode *inode, int mask) 
int inode_permission(struct inode *inode, int mask) 
void path_get(const struct path *path) 
void path_put(const struct path *path) 
static void set_nameidata(struct nameidata *p, int dfd, struct filename *name) 
static void restore_nameidata(void) 
static int __nd_alloc_stack(struct nameidata *nd) 
static bool path_connected(const struct path *path) 
static inline int nd_alloc_stack(struct nameidata *nd) 
static void drop_links(struct nameidata *nd) 
static void terminate_walk(struct nameidata *nd) 
static bool legitimize_path(struct nameidata *nd, struct path *path, unsigned seq) 
static bool legitimize_links(struct nameidata *nd) 
static int unlazy_walk(struct nameidata *nd) 
static int unlazy_child(struct nameidata *nd, struct dentry *dentry, unsigned seq) 
static inline int d_revalidate(struct dentry *dentry, unsigned int flags) 
static int complete_walk(struct nameidata *nd) 
static void set_root(struct nameidata *nd) 
static void path_put_conditional(struct path *path, struct nameidata *nd) 
static inline void path_to_nameidata(const struct path *path, struct nameidata *nd) 
static int nd_jump_root(struct nameidata *nd) 
void nd_jump_link(struct path *path) 
static inline void put_link(struct nameidata *nd) 
static inline int may_follow_link(struct nameidata *nd) 
static bool safe_hardlink_source(struct inode *inode) 
static int may_linkat(struct path *link) 
static __always_inline const char *get_link(struct nameidata *nd) 
int follow_up(struct path *path) 
static int follow_automount(struct path *path, struct nameidata *nd, bool *need_mntput) 
static int follow_managed(struct path *path, struct nameidata *nd) 
int follow_down_one(struct path *path) 
static inline int managed_dentry_rcu(const struct path *path) 
static bool __follow_mount_rcu(struct nameidata *nd, struct path *path, struct inode **inode, unsigned *seqp) 
static int follow_dotdot_rcu(struct nameidata *nd) 
int follow_down(struct path *path) 
static void follow_mount(struct path *path) 
static int path_parent_directory(struct path *path) 
static int follow_dotdot(struct nameidata *nd) 
static struct dentry *lookup_dcache(const struct qstr *name, struct dentry *dir, unsigned int flags) 
static struct dentry *__lookup_hash(const struct qstr *name, struct dentry *base, unsigned int flags) 
static int lookup_fast(struct nameidata *nd, struct path *path, struct inode **inode, unsigned *seqp) 
static struct dentry *__lookup_slow(const struct qstr *name, struct dentry *dir, unsigned int flags) 
static struct dentry *lookup_slow(const struct qstr *name, struct dentry *dir, unsigned int flags) 
static inline int may_lookup(struct nameidata *nd) 
static inline int handle_dots(struct nameidata *nd, int type) 
static int pick_link(struct nameidata *nd, struct path *link, struct inode *inode, unsigned seq) 
static inline int step_into(struct nameidata *nd, struct path *path, int flags, struct inode *inode, unsigned seq) 
static int walk_component(struct nameidata *nd, int flags) 
static int link_path_walk(const char *name, struct nameidata *nd) 
static const char *path_init(struct nameidata *nd, unsigned flags) 
static const char *trailing_symlink(struct nameidata *nd) 
static inline int lookup_last(struct nameidata *nd) 
static int handle_lookup_down(struct nameidata *nd) 
static int path_lookupat(struct nameidata *nd, unsigned flags, struct path *path) 
static int filename_lookup(int dfd, struct filename *name, unsigned flags, struct path *path, struct path *root) 
static int path_parentat(struct nameidata *nd, unsigned flags, struct path *parent) 
static struct filename *filename_parentat(int dfd, struct filename *name, unsigned int flags, struct path *parent, struct qstr *last, int *type) 
struct dentry *kern_path_locked(const char *name, struct path *path) 
int kern_path(const char *name, unsigned int flags, struct path *path) 
int vfs_path_lookup(struct dentry *dentry, struct vfsmount *mnt, const char *name, unsigned int flags, struct path *path) 
static int lookup_one_len_common(const char *name, struct dentry *base, int len, struct qstr *this) 
struct dentry *try_lookup_one_len(const char *name, struct dentry *base, int len) 
struct dentry *lookup_one_len(const char *name, struct dentry *base, int len) 
struct dentry *lookup_one_len_unlocked(const char *name, struct dentry *base, int len) 
int user_path_at_empty(int dfd, const char __user *name, unsigned flags, struct path *path, int *empty) 
static int mountpoint_last(struct nameidata *nd) 
static int path_mountpoint(struct nameidata *nd, unsigned flags, struct path *path) 
static int filename_mountpoint(int dfd, struct filename *name, struct path *path, unsigned int flags) 
int user_path_mountpoint_at(int dfd, const char __user *name, unsigned int flags, struct path *path) 
int kern_path_mountpoint(int dfd, const char *name, struct path *path, unsigned int flags) 
int __check_sticky(struct inode *dir, struct inode *inode) 
static int may_delete(struct inode *dir, struct dentry *victim, bool isdir) 
static inline int may_create(struct inode *dir, struct dentry *child) 
struct dentry *lock_rename(struct dentry *p1, struct dentry *p2) 
void unlock_rename(struct dentry *p1, struct dentry *p2) 
int vfs_create(struct inode *dir, struct dentry *dentry, umode_t mode, bool want_excl) 
int vfs_mkobj(struct dentry *dentry, umode_t mode, int (*f)(struct dentry *, umode_t, void *), void *arg) 
bool may_open_dev(const struct path *path) 
static int may_open(const struct path *path, int acc_mode, int flag) 
static int handle_truncate(struct file *filp) 
static inline int open_to_namei_flags(int flag) 
static int may_o_create(const struct path *dir, struct dentry *dentry, umode_t mode) 
static int atomic_open(struct nameidata *nd, struct dentry *dentry, struct path *path, struct file *file, const struct open_flags *op, int open_flag, umode_t mode, int *opened) 
static int lookup_open(struct nameidata *nd, struct path *path, struct file *file, const struct open_flags *op, bool got_write, int *opened) 
static int do_last(struct nameidata *nd, struct file *file, const struct open_flags *op, int *opened) 
struct dentry *vfs_tmpfile(struct dentry *dentry, umode_t mode, int open_flag) 
static int do_tmpfile(struct nameidata *nd, unsigned flags, const struct open_flags *op, struct file *file, int *opened) 
static int do_o_path(struct nameidata *nd, unsigned flags, struct file *file) 
static struct file *path_openat(struct nameidata *nd, const struct open_flags *op, unsigned flags) 
struct file *do_filp_open(int dfd, struct filename *pathname, const struct open_flags *op) 
struct file *do_file_open_root(struct dentry *dentry, struct vfsmount *mnt, const char *name, const struct open_flags *op) 
static struct dentry *filename_create(int dfd, struct filename *name, struct path *path, unsigned int lookup_flags) 
struct dentry *kern_path_create(int dfd, const char *pathname, struct path *path, unsigned int lookup_flags) 
void done_path_create(struct path *path, struct dentry *dentry) 
inline struct dentry *user_path_create(int dfd, const char __user *pathname, struct path *path, unsigned int lookup_flags) 
int vfs_mknod(struct inode *dir, struct dentry *dentry, umode_t mode, dev_t dev) 
static int may_mknod(umode_t mode) 
long do_mknodat(int dfd, const char __user *filename, umode_t mode, unsigned int dev) 
SYSCALL_DEFINE4(mknodat, int, dfd, const char __user *, filename, umode_t, mode, unsigned int, dev) 
SYSCALL_DEFINE3(mknod, const char __user *, filename, umode_t, mode, unsigned, dev) 
int vfs_mkdir(struct inode *dir, struct dentry *dentry, umode_t mode) 
long do_mkdirat(int dfd, const char __user *pathname, umode_t mode) 
SYSCALL_DEFINE3(mkdirat, int, dfd, const char __user *, pathname, umode_t, mode) 
SYSCALL_DEFINE2(mkdir, const char __user *, pathname, umode_t, mode) 
int vfs_rmdir(struct inode *dir, struct dentry *dentry) 
long do_rmdir(int dfd, const char __user *pathname) 
SYSCALL_DEFINE1(rmdir, const char __user *, pathname) 
int vfs_unlink(struct inode *dir, struct dentry *dentry, struct inode **delegated_inode) 
long do_unlinkat(int dfd, struct filename *name) 
SYSCALL_DEFINE3(unlinkat, int, dfd, const char __user *, pathname, int, flag) 
SYSCALL_DEFINE1(unlink, const char __user *, pathname) 
int vfs_symlink(struct inode *dir, struct dentry *dentry, const char *oldname) 
long do_symlinkat(const char __user *oldname, int newdfd, const char __user *newname) 
SYSCALL_DEFINE3(symlinkat, const char __user *, oldname, int, newdfd, const char __user *, newname) 
SYSCALL_DEFINE2(symlink, const char __user *, oldname, const char __user *, newname) 
int vfs_link(struct dentry *old_dentry, struct inode *dir, struct dentry *new_dentry, struct inode **delegated_inode) 
int do_linkat(int olddfd, const char __user *oldname, int newdfd, const char __user *newname, int flags) 
SYSCALL_DEFINE5(linkat, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname, int, flags) 
SYSCALL_DEFINE2(link, const char __user *, oldname, const char __user *, newname) 
int vfs_rename(struct inode *old_dir, struct dentry *old_dentry, struct inode *new_dir, struct dentry *new_dentry, struct inode **delegated_inode, unsigned int flags) 
static int do_renameat2(int olddfd, const char __user *oldname, int newdfd, const char __user *newname, unsigned int flags) 
SYSCALL_DEFINE5(renameat2, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname, unsigned int, flags) 
SYSCALL_DEFINE4(renameat, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname) 
SYSCALL_DEFINE2(rename, const char __user *, oldname, const char __user *, newname) 
int vfs_whiteout(struct inode *dir, struct dentry *dentry) 
int readlink_copy(char __user *buffer, int buflen, const char *link) 
static int generic_readlink(struct dentry *dentry, char __user *buffer, int buflen) 
int vfs_readlink(struct dentry *dentry, char __user *buffer, int buflen) 
const char *vfs_get_link(struct dentry *dentry, struct delayed_call *done) 
const char *page_get_link(struct dentry *dentry, struct inode *inode, struct delayed_call *callback) 
void page_put_link(void *arg) 
int page_readlink(struct dentry *dentry, char __user *buffer, int buflen) 
int __page_symlink(struct inode *inode, const char *symname, int len, int nofs) 
int page_symlink(struct inode *inode, const char *symname, int len) 
