struct rcu_dynticks {long dynticks_nesting; long dynticks_nmi_nesting; atomic_t dynticks; bool rcu_need_heavy_qs; unsigned long rcu_qs_ctr; bool rcu_urgent_qs; bool all_lazy; unsigned long nonlazy_posted; unsigned long nonlazy_posted_snap; unsigned long last_accelerate; unsigned long last_advance_all; int tick_nohz_enabled_snap; };
struct rcu_exp_work {smp_call_func_t rew_func; struct rcu_state *rew_rsp; unsigned long rew_s; struct work_struct rew_work; };
struct rcu_node {raw_spinlock_t __private lock; unsigned long gpnum; unsigned long completed; unsigned long qsmask; unsigned long qsmaskinit; unsigned long qsmaskinitnext; unsigned long expmask; unsigned long expmaskinit; unsigned long expmaskinitnext; unsigned long ffmask; unsigned long grpmask; int grplo; int grphi; u8 grpnum; u8 level; bool wait_blkd_tasks; struct rcu_node *parent; struct list_head blkd_tasks; struct list_head *gp_tasks; struct list_head *exp_tasks; struct list_head *boost_tasks; struct rt_mutex boost_mtx; unsigned long boost_time; struct task_struct *boost_kthread_task; unsigned int boost_kthread_status; struct swait_queue_head nocb_gp_wq[2]; u8 need_future_gp[4]; raw_spinlock_t fqslock ____cacheline_internodealigned_in_smp; spinlock_t exp_lock ____cacheline_internodealigned_in_smp; unsigned long exp_seq_rq; wait_queue_head_t exp_wq[4]; struct rcu_exp_work rew; bool exp_need_flush; };
union rcu_noqs {struct { u8 norm; u8 exp; };u16 s; };
struct rcu_data {unsigned long completed; unsigned long gpnum; unsigned long rcu_qs_ctr_snap; union rcu_noqs cpu_no_qs; bool  core_needs_qs; bool  beenonline; bool  gpwrap; struct rcu_node *mynode; unsigned long grpmask; unsigned long ticks_this_gp; struct rcu_segcblist cblist; long  qlen_last_fqs_check; unsigned long n_force_qs_snap; long  blimit; struct rcu_dynticks *dynticks; int dynticks_snap; unsigned long dynticks_fqs; unsigned long offline_fqs; unsigned long cond_resched_completed; struct rcu_head barrier_head; struct rcu_head oom_head; int exp_dynticks_snap; struct rcu_head *nocb_head; struct rcu_head **nocb_tail; atomic_long_t nocb_q_count; atomic_long_t nocb_q_count_lazy; struct rcu_head *nocb_follower_head; struct rcu_head **nocb_follower_tail; struct swait_queue_head nocb_wq; struct task_struct *nocb_kthread; raw_spinlock_t nocb_lock; int nocb_defer_wakeup; struct timer_list nocb_timer; struct rcu_head *nocb_gp_head ____cacheline_internodealigned_in_smp; struct rcu_head **nocb_gp_tail; bool nocb_leader_sleep; struct rcu_data *nocb_next_follower; struct rcu_data *nocb_leader ____cacheline_internodealigned_in_smp; unsigned int softirq_snap; struct irq_work rcu_iw; bool rcu_iw_pending; unsigned long rcu_iw_gpnum; int cpu; struct rcu_state *rsp; };
struct rcu_state {struct rcu_node node[NUM_RCU_NODES]; struct rcu_node *level[RCU_NUM_LVLS + 1]; struct rcu_data __percpu *rda; call_rcu_func_t call; int ncpus; u8 boost ____cacheline_internodealigned_in_smp; unsigned long gpnum; unsigned long completed; struct task_struct *gp_kthread; struct swait_queue_head gp_wq; short gp_flags; short gp_state; struct mutex barrier_mutex; atomic_t barrier_cpu_count; struct completion barrier_completion; unsigned long barrier_sequence; struct mutex exp_mutex; struct mutex exp_wake_mutex; unsigned long expedited_sequence; atomic_t expedited_need_qs; struct swait_queue_head expedited_wq; int ncpus_snap; unsigned long jiffies_force_qs; unsigned long jiffies_kick_kthreads; unsigned long n_force_qs; unsigned long gp_start; unsigned long gp_activity; unsigned long jiffies_stall; unsigned long jiffies_resched; unsigned long n_force_qs_gpstart; unsigned long gp_max; const char *name; char abbr; struct list_head flavors; };
