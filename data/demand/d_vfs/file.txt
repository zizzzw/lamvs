SYSCALL_DEFINE1() <SYSCALL_DEFINE1 (dup, unsigned int, fildes) at file.c:943>:
    ksys_dup() <int ksys_dup (unsigned int fildes) at file.c:928>:
        EBADF
        fget_raw() <struct file *fget_raw (unsigned int fd) at file.c:708>:
            __fget() <struct file *__fget (unsigned int fd, fmode_t mask) at file.c:679>:
                current
                rcu_read_lock()
                loop
                fcheck_files()
                NULL
                get_file_rcu()
                rcu_read_unlock()
        get_unused_fd_flags() <int get_unused_fd_flags (unsigned flags) at file.c:542>:
            __alloc_fd() <int __alloc_fd (struct files_struct *files, unsigned start, unsigned end, unsigned flags) at file.c:479>:
                fd
                spin_lock()
                repeat
                files_fdtable()
                find_next_fd() <unsigned int find_next_fd (struct fdtable *fdt, unsigned int start) at file.c:462>:
                    maxfd
                    maxbit
                    BITS_PER_LONG
                    bitbit
                    find_next_zero_bit()
                EMFILE
                out
                expand_files()
                __set_open_fd() <inline void __set_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:239>:
                    __set_bit()
                    BITS_PER_LONG
                O_CLOEXEC
                __set_close_on_exec() <inline void __set_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:228>:
                    __set_bit()
                __clear_close_on_exec() <inline void __clear_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:233>:
                    test_bit()
                    __clear_bit()
                rcu_access_pointer()
                NULL
                printk()
                KERN_WARNING
                rcu_assign_pointer()
                spin_unlock()
            current
            rlimit()
            RLIMIT_NOFILE
        fd_install() <void fd_install (unsigned int fd, struct file *file) at file.c:610>:
            __fd_install() <void __fd_install (struct files_struct *files, unsigned int fd, struct file *file) at file.c:586>:
                rcu_read_lock_sched()
                unlikely()
                rcu_read_unlock_sched()
                spin_lock()
                files_fdtable()
                BUG_ON()
                NULL
                rcu_assign_pointer()
                spin_unlock()
                smp_rmb()
                rcu_dereference_sched()
            current
        fput()
SYSCALL_DEFINE2() <SYSCALL_DEFINE2 (dup2, unsigned int, oldfd, unsigned int, newfd) at file.c:913>:
    unlikely()
    current
    rcu_read_lock()
    fcheck_files()
    EBADF
    rcu_read_unlock()
    ksys_dup3() <int ksys_dup3 (unsigned int oldfd, unsigned int newfd, int flags) at file.c:874>:
        EBADF
        current
        O_CLOEXEC
        EINVAL
        unlikely()
        rlimit()
        RLIMIT_NOFILE
        spin_lock()
        expand_files()
        fcheck()
        Ebadf
        EMFILE
        out_unlock
        do_dup2() <int do_dup2 (struct files_struct *files, struct file *file, unsigned fd, unsigned flags) at file.c:808>:
            files_fdtable()
            fd_is_open()
            Ebusy
            get_file()
            rcu_assign_pointer()
            __set_open_fd() <inline void __set_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:239>:
                __set_bit()
                BITS_PER_LONG
            O_CLOEXEC
            __set_close_on_exec() <inline void __set_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:228>:
                __set_bit()
            __clear_close_on_exec() <inline void __clear_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:233>:
                test_bit()
                __clear_bit()
            spin_unlock()
            filp_close()
            EBUSY
        spin_unlock()
SYSCALL_DEFINE3() <SYSCALL_DEFINE3 (dup3, unsigned int, oldfd, unsigned int, newfd, int, flags) at file.c:908>:
    ksys_dup3() <int ksys_dup3 (unsigned int oldfd, unsigned int newfd, int flags) at file.c:874>:
        EBADF
        current
        O_CLOEXEC
        EINVAL
        unlikely()
        rlimit()
        RLIMIT_NOFILE
        spin_lock()
        expand_files()
        fcheck()
        Ebadf
        EMFILE
        out_unlock
        do_dup2() <int do_dup2 (struct files_struct *files, struct file *file, unsigned fd, unsigned flags) at file.c:808>:
            files_fdtable()
            fd_is_open()
            Ebusy
            get_file()
            rcu_assign_pointer()
            __set_open_fd() <inline void __set_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:239>:
                __set_bit()
                BITS_PER_LONG
            O_CLOEXEC
            __set_close_on_exec() <inline void __set_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:228>:
                __set_bit()
            __clear_close_on_exec() <inline void __clear_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:233>:
                test_bit()
                __clear_bit()
            spin_unlock()
            filp_close()
            EBUSY
        spin_unlock()
__f_unlock_pos() <void __f_unlock_pos (struct file *f) at file.c:772>:
    mutex_unlock()
__fdget_pos() <unsigned long __fdget_pos (unsigned int fd) at file.c:758>:
    v
    __fdget() <unsigned long __fdget (unsigned int fd) at file.c:747>:
        __fget_light() <unsigned long __fget_light (unsigned int fd, fmode_t mask) at file.c:730>:
            current
            atomic_read()
            __fcheck_files()
            unlikely()
            __fget() <struct file *__fget (unsigned int fd, fmode_t mask) at file.c:679>:
                current
                rcu_read_lock()
                loop
                fcheck_files()
                NULL
                get_file_rcu()
                rcu_read_unlock()
            FDPUT_FPUT
        FMODE_PATH
    FMODE_ATOMIC_POS
    file_count()
    FDPUT_POS_UNLOCK
    mutex_lock()
__fdget_raw() <unsigned long __fdget_raw (unsigned int fd) at file.c:753>:
    __fget_light() <unsigned long __fget_light (unsigned int fd, fmode_t mask) at file.c:730>:
        current
        atomic_read()
        __fcheck_files()
        unlikely()
        __fget() <struct file *__fget (unsigned int fd, fmode_t mask) at file.c:679>:
            current
            rcu_read_lock()
            loop
            fcheck_files()
            NULL
            get_file_rcu()
            rcu_read_unlock()
        FDPUT_FPUT
__read_mostly <unsigned int sysctl_nr_open __read_mostly at file.c:22>
copy_fdtable() <void copy_fdtable (struct fdtable *nfdt, struct fdtable *ofdt) at file.c:71>:
    cpy
    set
    BUG_ON()
    memcpy()
    memset()
    copy_fd_bitmaps() <void copy_fd_bitmaps (struct fdtable *nfdt, struct fdtable *ofdt, unsigned int count) at file.c:49>:
        cpy
        set
        BITS_PER_BYTE
        memcpy()
        memset()
        BITBIT_SIZE()
do_close_on_exec() <void do_close_on_exec (struct files_struct *files) at file.c:643>:
    i
    spin_lock()
    set
    fd
    BITS_PER_LONG
    files_fdtable()
    rcu_assign_pointer()
    NULL
    __put_unused_fd() <void __put_unused_fd (struct files_struct *files, unsigned int fd) at file.c:548>:
        files_fdtable()
        __clear_open_fd() <inline void __clear_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:247>:
            __clear_bit()
            BITS_PER_LONG
    spin_unlock()
    filp_close()
    cond_resched()
dup_fd() <struct files_struct *dup_fd (struct files_struct *oldf, int *errorp) at file.c:272>:
    open_files
    i
    ENOMEM
    kmem_cache_alloc()
    files_cachep
    GFP_KERNEL
    out
    atomic_set()
    spin_lock_init()
    false
    init_waitqueue_head()
    NR_OPEN_DEFAULT
    spin_lock()
    files_fdtable()
    count_open_files() <unsigned int count_open_files (struct fdtable *fdt) at file.c:253>:
        size
        i
        BITS_PER_LONG
    unlikely()
    spin_unlock()
    __free_fdtable() <void __free_fdtable (struct fdtable *fdt) at file.c:29>:
        kvfree()
        kfree()
    alloc_fdtable() <struct fdtable *alloc_fdtable (unsigned int nr) at file.c:85>:
        roundup_pow_of_two()
        unlikely()
        sysctl_nr_open
        BITS_PER_LONG
        kmalloc()
        GFP_KERNEL_ACCOUNT
        out
        kvmalloc_array()
        out_fdt
        kvmalloc()
        max_t()
        size_t
        BITS_PER_BYTE
        BITBIT_SIZE()
        L1_CACHE_BYTES
        out_arr
        kvfree()
        kfree()
        NULL
    out_release
    EMFILE
    copy_fd_bitmaps() <void copy_fd_bitmaps (struct fdtable *nfdt, struct fdtable *ofdt, unsigned int count) at file.c:49>:
        cpy
        set
        BITS_PER_BYTE
        memcpy()
        memset()
        BITBIT_SIZE()
    get_file()
    __clear_open_fd() <inline void __clear_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:247>:
        __clear_bit()
        BITS_PER_LONG
    rcu_assign_pointer()
    memset()
    kmem_cache_free()
    NULL
exit_files() <void exit_files (struct task_struct *tsk) at file.c:437>:
    task_lock()
    NULL
    task_unlock()
    put_files_struct() <void put_files_struct (struct files_struct *files) at file.c:413>:
        atomic_dec_and_test()
        close_files() <struct fdtable *close_files (struct files_struct *files) at file.c:368>:
            rcu_dereference_raw()
            i
            j
            set
            BITS_PER_LONG
            xchg()
            NULL
            filp_close()
            cond_resched()
        __free_fdtable() <void __free_fdtable (struct fdtable *fdt) at file.c:29>:
            kvfree()
            kfree()
        kmem_cache_free()
        files_cachep
f_dupfd() <int f_dupfd (unsigned int from, struct file *file, unsigned flags) at file.c:948>:
    rlimit()
    RLIMIT_NOFILE
    EINVAL
    alloc_fd() <int alloc_fd (unsigned start, unsigned flags) at file.c:537>:
        __alloc_fd() <int __alloc_fd (struct files_struct *files, unsigned start, unsigned end, unsigned flags) at file.c:479>:
            fd
            spin_lock()
            repeat
            files_fdtable()
            find_next_fd() <unsigned int find_next_fd (struct fdtable *fdt, unsigned int start) at file.c:462>:
                maxfd
                maxbit
                BITS_PER_LONG
                bitbit
                find_next_zero_bit()
            EMFILE
            out
            expand_files()
            __set_open_fd() <inline void __set_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:239>:
                __set_bit()
                BITS_PER_LONG
            O_CLOEXEC
            __set_close_on_exec() <inline void __set_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:228>:
                __set_bit()
            __clear_close_on_exec() <inline void __clear_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:233>:
                test_bit()
                __clear_bit()
            rcu_access_pointer()
            NULL
            printk()
            KERN_WARNING
            rcu_assign_pointer()
            spin_unlock()
        current
        rlimit()
        RLIMIT_NOFILE
    get_file()
    fd_install() <void fd_install (unsigned int fd, struct file *file) at file.c:610>:
        __fd_install() <void __fd_install (struct files_struct *files, unsigned int fd, struct file *file) at file.c:586>:
            rcu_read_lock_sched()
            unlikely()
            rcu_read_unlock_sched()
            spin_lock()
            files_fdtable()
            BUG_ON()
            NULL
            rcu_assign_pointer()
            spin_unlock()
            smp_rmb()
            rcu_dereference_sched()
        current
fget() <struct file *fget (unsigned int fd) at file.c:702>:
    __fget() <struct file *__fget (unsigned int fd, fmode_t mask) at file.c:679>:
        current
        rcu_read_lock()
        loop
        fcheck_files()
        NULL
        get_file_rcu()
        rcu_read_unlock()
    FMODE_PATH
free_fdtable_rcu() <void free_fdtable_rcu (struct rcu_head *rcu) at file.c:36>:
    __free_fdtable() <void __free_fdtable (struct fdtable *fdt) at file.c:29>:
        kvfree()
        kfree()
    container_of()
    fdtable
get_close_on_exec() <bool get_close_on_exec (unsigned int fd) at file.c:796>:
    current
    bool
    res
    rcu_read_lock()
    files_fdtable()
    close_on_exec()
    rcu_read_unlock()
get_files_struct() <struct files_struct *get_files_struct (struct task_struct *task) at file.c:400>:
    task_lock()
    atomic_inc()
    task_unlock()
init_files <struct files_struct init_files at file.c:449>
iterate_fd() <int iterate_fd (struct files_struct *files, unsigned n, int (*f) (const void *, struct file *, unsigned), const void *p) at file.c:961>:
    spin_lock()
    files_fdtable()
    rcu_dereference_check_fdtable()
    spin_unlock()
put_unused_fd() <void put_unused_fd (unsigned int fd) at file.c:556>:
    current
    spin_lock()
    __put_unused_fd() <void __put_unused_fd (struct files_struct *files, unsigned int fd) at file.c:548>:
        files_fdtable()
        __clear_open_fd() <inline void __clear_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:247>:
            __clear_bit()
            BITS_PER_LONG
    spin_unlock()
replace_fd() <int replace_fd (unsigned fd, struct file *file, unsigned flags) at file.c:852>:
    current
    __close_fd() <int __close_fd (struct files_struct *files, unsigned fd) at file.c:620>:
        spin_lock()
        files_fdtable()
        out_unlock
        rcu_assign_pointer()
        NULL
        __put_unused_fd() <void __put_unused_fd (struct files_struct *files, unsigned int fd) at file.c:548>:
            files_fdtable()
            __clear_open_fd() <inline void __clear_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:247>:
                __clear_bit()
                BITS_PER_LONG
        spin_unlock()
        filp_close()
        EBADF
    rlimit()
    RLIMIT_NOFILE
    EBADF
    spin_lock()
    expand_files()
    unlikely()
    out_unlock
    do_dup2() <int do_dup2 (struct files_struct *files, struct file *file, unsigned fd, unsigned flags) at file.c:808>:
        files_fdtable()
        fd_is_open()
        Ebusy
        get_file()
        rcu_assign_pointer()
        __set_open_fd() <inline void __set_open_fd (unsigned int fd, struct fdtable *fdt) at file.c:239>:
            __set_bit()
            BITS_PER_LONG
        O_CLOEXEC
        __set_close_on_exec() <inline void __set_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:228>:
            __set_bit()
        __clear_close_on_exec() <inline void __clear_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:233>:
            test_bit()
            __clear_bit()
        spin_unlock()
        filp_close()
        EBUSY
    spin_unlock()
reset_files_struct() <void reset_files_struct (struct files_struct *files) at file.c:425>:
    current
    task_lock()
    task_unlock()
    put_files_struct() <void put_files_struct (struct files_struct *files) at file.c:413>:
        atomic_dec_and_test()
        close_files() <struct fdtable *close_files (struct files_struct *files) at file.c:368>:
            rcu_dereference_raw()
            i
            j
            set
            BITS_PER_LONG
            xchg()
            NULL
            filp_close()
            cond_resched()
        __free_fdtable() <void __free_fdtable (struct fdtable *fdt) at file.c:29>:
            kvfree()
            kfree()
        kmem_cache_free()
        files_cachep
set_close_on_exec() <void set_close_on_exec (unsigned int fd, int flag) at file.c:783>:
    current
    spin_lock()
    files_fdtable()
    __set_close_on_exec() <inline void __set_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:228>:
        __set_bit()
    __clear_close_on_exec() <inline void __clear_close_on_exec (unsigned int fd, struct fdtable *fdt) at file.c:233>:
        test_bit()
        __clear_bit()
    spin_unlock()
sysctl_nr_open_max <unsigned int sysctl_nr_open_max at file.c:26>
sysctl_nr_open_min <unsigned int sysctl_nr_open_min at file.c:23>
