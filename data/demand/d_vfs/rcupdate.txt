destroy_rcu_head() <inline void destroy_rcu_head (struct rcu_head *head) at linux/rcupdate.h:230>
destroy_rcu_head_on_stack() <inline void destroy_rcu_head_on_stack (struct rcu_head *head) at linux/rcupdate.h:232>
exit_tasks_rcu_finish() <inline void exit_tasks_rcu_finish (void) at linux/rcupdate.h:186>
exit_tasks_rcu_start() <inline void exit_tasks_rcu_start (void) at linux/rcupdate.h:185>
init_rcu_head() <inline void init_rcu_head (struct rcu_head *head) at linux/rcupdate.h:229>
init_rcu_head_on_stack() <inline void init_rcu_head_on_stack (struct rcu_head *head) at linux/rcupdate.h:231>
rcu_init_nohz() <inline void rcu_init_nohz (void) at linux/rcupdate.h:132>
rcu_lockdep_current_cpu_online() <inline bool rcu_lockdep_current_cpu_online (void) at linux/rcupdate.h:238>:
    true
rcu_preempt_depth() <inline int rcu_preempt_depth (void) at linux/rcupdate.h:97>
rcu_preempt_sleep_check() <inline void rcu_preempt_sleep_check (void) at linux/rcupdate.h:306>:
    RCU_LOCKDEP_WARN()
    lock_is_held()
    rcu_lock_map
rcu_read_lock() <inline void rcu_read_lock (void) at linux/rcupdate.h:627>:
    __rcu_read_lock() <inline void __rcu_read_lock (void) at linux/rcupdate.h:80>:
        IS_ENABLED()
        CONFIG_PREEMPT_COUNT
        preempt_disable()
    __acquire()
    RCU
    rcu_lock_acquire() <inline void rcu_lock_acquire (struct lockdep_map *map) at linux/rcupdate.h:243>:
        lock_acquire()
        NULL
        _THIS_IP_
    rcu_lock_map
    RCU_LOCKDEP_WARN()
    rcu_is_watching()
rcu_read_lock_bh() <inline void rcu_read_lock_bh (void) at linux/rcupdate.h:705>:
    local_bh_disable()
    __acquire()
    RCU_BH
    rcu_lock_acquire() <inline void rcu_lock_acquire (struct lockdep_map *map) at linux/rcupdate.h:243>:
        lock_acquire()
        NULL
        _THIS_IP_
    rcu_bh_lock_map
    RCU_LOCKDEP_WARN()
    rcu_is_watching()
rcu_read_lock_bh_held() <inline int rcu_read_lock_bh_held (void) at linux/rcupdate.h:272>
rcu_read_lock_held() <inline int rcu_read_lock_held (void) at linux/rcupdate.h:267>
rcu_read_lock_sched() <inline void rcu_read_lock_sched (void) at linux/rcupdate.h:741>:
    preempt_disable()
    __acquire()
    RCU_SCHED
    rcu_lock_acquire() <inline void rcu_lock_acquire (struct lockdep_map *map) at linux/rcupdate.h:243>:
        lock_acquire()
        NULL
        _THIS_IP_
    rcu_sched_lock_map
    RCU_LOCKDEP_WARN()
    rcu_is_watching()
rcu_read_lock_sched_held() <inline int rcu_read_lock_sched_held (void) at linux/rcupdate.h:277>:
    preemptible()
rcu_read_lock_sched_notrace() <inline notrace void rcu_read_lock_sched_notrace (void) at linux/rcupdate.h:751>:
    preempt_disable_notrace()
    __acquire()
    RCU_SCHED
rcu_read_unlock() <inline void rcu_read_unlock (void) at linux/rcupdate.h:679>:
    RCU_LOCKDEP_WARN()
    rcu_is_watching()
    __release()
    RCU
    __rcu_read_unlock() <inline void __rcu_read_unlock (void) at linux/rcupdate.h:86>:
        IS_ENABLED()
        CONFIG_PREEMPT_COUNT
        preempt_enable()
    rcu_lock_release() <inline void rcu_lock_release (struct lockdep_map *map) at linux/rcupdate.h:248>:
        lock_release()
        _THIS_IP_
    rcu_lock_map
rcu_read_unlock_bh() <inline void rcu_read_unlock_bh (void) at linux/rcupdate.h:719>:
    RCU_LOCKDEP_WARN()
    rcu_is_watching()
    rcu_lock_release() <inline void rcu_lock_release (struct lockdep_map *map) at linux/rcupdate.h:248>:
        lock_release()
        _THIS_IP_
    rcu_bh_lock_map
    __release()
    RCU_BH
    local_bh_enable()
rcu_read_unlock_sched() <inline void rcu_read_unlock_sched (void) at linux/rcupdate.h:762>:
    RCU_LOCKDEP_WARN()
    rcu_is_watching()
    rcu_lock_release() <inline void rcu_lock_release (struct lockdep_map *map) at linux/rcupdate.h:248>:
        lock_release()
        _THIS_IP_
    rcu_sched_lock_map
    __release()
    RCU_SCHED
    preempt_enable()
rcu_read_unlock_sched_notrace() <inline notrace void rcu_read_unlock_sched_notrace (void) at linux/rcupdate.h:772>:
    __release()
    RCU_SCHED
    preempt_enable_notrace()
rcu_sysrq_end() <inline void rcu_sysrq_end (void) at linux/rcupdate.h:118>
rcu_sysrq_start() <inline void rcu_sysrq_start (void) at linux/rcupdate.h:117>
rcu_user_enter() <inline void rcu_user_enter (void) at linux/rcupdate.h:125>
rcu_user_exit() <inline void rcu_user_exit (void) at linux/rcupdate.h:126>
synchronize_rcu() <inline void synchronize_rcu (void) at linux/rcupdate.h:92>:
    synchronize_sched()
